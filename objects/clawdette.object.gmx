<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>clawdette_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>anim_counter = 0
anim_counter_walk = 0
anim_max = 63
anim_max_walk = 12
walking = false

pick_object = noone

var global.inventory = array_create(10);
var global.listOfSprites = array_create(40);
var global.spriteIndex = 0
moved = false

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//movement
walking = false
dx = 0
dy = 0
change = 6

if (keyboard_check(vk_up))
{
    dy -= change;
    anim_counter = 0
    moved = true
}
if (keyboard_check(vk_down))
{
    dy += change;
    anim_counter = 0
    moved = true
}

if (keyboard_check(vk_left))
{
    image_xscale = -1
    dx -= change;
    anim_counter = 0
    moved = true
}
if (keyboard_check(vk_right))
{
    image_xscale = 1
    dx += change;
    anim_counter = 0
    moved = true
}

if (moved == true)
{
    for (var i = 0; i &lt; global.spriteIndex; i++;)
    {
        sprite_delete(global.listOfSprites[i])
    }
    global.spriteIndex = 0
    moved = false
}


if (abs(dx) &gt; 0 &amp;&amp; abs(dy) &gt; 0)
{
    dx /= sqrt(2)
    dy /= sqrt(2)
    dx = floor(dx + 0.5)
    dy = floor(dy + 0.5)
}

//get a list of all pushable objects
pushables = array_create(instance_number(pushable))
for (i = 0; i &lt; array_length_1d(pushables); i += 1)
{
    pushables[i] = instance_find(pushable, i);
}

//apply horizontal movement and push objects if necessary
while (abs(dx) &gt; 0)
{
    if (abs(dx) &gt;= 1)
    {
        step = sign(dx)
    }
    else
    {
        step = dx
    }

    if (place_free(x+step, y))
    {
        to_move = 0
        move_count = 0
        blocked = false
        for (i = 0; i &lt; array_length_1d(pushables); i += 1)
        {
            p = pushables[i]
            if (instance_place(x+step, y, p))
            {
                temp = false
                with (p)
                {
                    other.temp = place_empty(x + other.step, y)
                }
                if (temp)
                {
                    to_move[move_count] = p
                    move_count ++
                }
                else
                {
                    blocked = true
                    break
                }
            }
        }
        if (!blocked)
        {
            x += step
            dx -= step
            walking = true   
            for (i = 0; i &lt; move_count; i ++)
            {
                to_move[i].x += step
            }     
        }
        else
        {
            break
        }
    }
    else
    {
        break
    }
}

//apply vertical movement and push objects if necessary
while (abs(dy) &gt; 0)
{
    if (abs(dy) &gt;= 1)
    {
        step = sign(dy)
    }
    else
    {
        step = dy
    }
    
    if (place_free(x, y+step))
    {
        to_move = 0
        move_count = 0
        blocked = false
        for (i = 0; i &lt; array_length_1d(pushables); i += 1)
        {
            p = pushables[i]
            if (instance_place(x, y+step, p))
            {
                temp = false
                with (p)
                {
                    other.temp = place_empty(x, y + other.step)
                }
                if (temp)
                {
                    to_move[move_count] = p
                    move_count ++
                }
                else
                {
                    blocked = true
                    break
                }
            }
        }
        if (!blocked)
        {
            y += step
            dy -= step
            walking = true 
            for (i = 0; i &lt; move_count; i ++)
            {
                to_move[i].y += step
            }     
        }
        else
        {
            break
        }
    }
    else
    {
        break
    }
}

//determine if there's a pickable object nearby and highlight it
if (pick_object != noone)
{
    if (instance_exists(pick_object))
    {
        pick_object.image_index = 0
    }
    else
    {
        pick_object = noone
    }
}
pick_object = noone
pick_threshold = 100
min_dst = pick_threshold
for (i = 0; i &lt; instance_number(pickable); i ++)
{
    //check for the closest object that's also in range, then highlight it
    temp_pick_object = instance_find(pickable, i)
    dst = script_execute(distance_from_player, temp_pick_object.x, temp_pick_object.y)
    if (dst &lt; min_dst)
    {
        pick_object = temp_pick_object
        min_dst = dst
    }
}
if (pick_object != noone)
{
    pick_object.image_index = 1
}

//todo: check for pickup button press

//object options: "pearl", "pebble", "seaweed", "penny"

//animation
if (walking)
{
    image_speed = 0.333
    sprite_index = clawdette_walk
}
else
{
    x = floor(x+0.5)
    y = floor(y+0.5)
    anim_counter = (anim_counter + 1) % anim_max
    sprite_index = clawdette_idle
    image_speed = 0
    if (anim_counter &gt;= 60)
    {
        image_index = 3
    }
    else if (anim_counter &gt;= 54)
    {
        image_index = 2
    }
    else if (anim_counter &gt;= 48)
    {
        image_index = 1
    }
    else
    {
        image_index = 0
    }
}

//keep her in the room
x = clamp(x, 0, room_width);
y = clamp(y, 0, room_height);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y - 24
draw_sprite_ext(sprite_index, image_index, floor(x + 0.5), floor(y + 0.5), image_xscale, image_yscale, image_angle, image_blend, image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//pearl, pebble, seaweed, penny
var alength = array_length_1d(global.inventory);
var angle = 180;

for (var i = 0; i &lt; alength; i++;)
{
    for (var j = 0; j &lt; global.inventory[i]; j++;)
    {
        if (i == 0)
        {
            global.listOfSprites[global.spriteIndex] = instance_create(x + lengthdir_x(62, angle), y + lengthdir_y(62, angle), inv_pearl)
        }
        global.spriteIndex+=1
        angle-=20
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="48">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_inv_gain_item("pearl");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
