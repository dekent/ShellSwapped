<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>dad_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>anim_counter = 21
anim_max = 63

text_timer = 0
active_text = ""
tx = x
ty = y
text_color = make_colour_rgb(254, 67, 101)

cutscene_counter = 0
image_speed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// text updates
if (text_timer &gt; 0)
{
    ty -= 0.25
    text_timer --
}

// opening cutscene stuff
cutscene_counter ++

if (keyboard_check_pressed(ord('Z')) || keyboard_check_pressed(ord('X')) || keyboard_check_pressed(ord('C')))
{
    room_goto(room0)
}

switch (cutscene_counter)
{
    case 90:
        active_text = "Clawdette."
        text_timer = 30
        tx = x
        ty = y - 48
    break
    
    case 150:
        var player = instance_find(clawdette_cutscene, 0)
        with (player)
        {
            active_text = "Pops."
            var talk_sound = snd_talk
            audio_sound_pitch(talk_sound, random_range(1.0, 1.1))
            audio_sound_gain(talk_sound, random_range(0.9, 1.0), 0)
            audio_play_sound(talk_sound, 100, false)
            text_timer = 20
            var d = random_range(50, 60)
            var angle = random_range(pi, 2*pi)
            if (angle &gt; 5*pi/4 &amp;&amp; angle &lt; 7*pi/4)
            {
                d -= 10
            }
            tx = x + d*cos(angle)
            ty = y + d*sin(angle)
        }
    break
    
    case 210:
        active_text = "You've really grown!  It's time to find a bigger shell."
        text_timer = 120
        tx = x
        ty = y - 48
    break
    
    case 330:
        active_text = "Take this piece of the family sponge,"
        text_timer = 120
        tx = x
        ty = y - 48
    break
    
    case 450:
        active_text = "and see if you can trade it for a new shell."
        text_timer = 120
        tx = x
        ty = y - 48
    break
    
    case 630:
        var player = instance_find(clawdette_cutscene, 0)
        with (player)
        {
            active_text = "kay."
            var talk_sound = snd_talk
            audio_sound_pitch(talk_sound, random_range(1.0, 1.1))
            audio_sound_gain(talk_sound, random_range(0.9, 1.0), 0)
            audio_play_sound(talk_sound, 100, false)
            text_timer = 20
            var d = random_range(50, 60)
            var angle = random_range(pi, 2*pi)
            if (angle &gt; 5*pi/4 &amp;&amp; angle &lt; 7*pi/4)
            {
                d -= 10
            }
            tx = x + d*cos(angle)
            ty = y + d*sin(angle)
        }
    break
    
    case 720:
        room_goto(room0)
    break
}

// animation
anim_counter = (anim_counter + 1) % anim_max
if (anim_counter &gt;= 60)
{
    image_index = 3
}
else if (anim_counter &gt;= 54)
{
    image_index = 2
}
else if (anim_counter &gt;= 48)
{
    image_index = 1
}
else
{
    image_index = 0
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y - 24
draw_self()
if (text_timer &gt; 0)
{
    draw_set_color(c_black)
    draw_text_ext(floor(tx + 2.5), floor(ty + 2.5), active_text, 24, 256)
    draw_set_color(text_color)
    draw_text_ext(floor(tx + 0.5), floor(ty + 0.5), active_text, 24, 256)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
