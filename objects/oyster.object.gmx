<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>oyster_closed_idle</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0
image_index = 1
anim_counter = 0
anim_max = 183

cx = x
cy = y + 64

state = 0  // 0: closed idle,  1: opening,  2: open idle,  3: closing
active_threshold = 200
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>change_condition = false
player = instance_find(clawdette, 0)
if (state == 0)  // check if we should open the shell
{
    with (player)
    {
        if (script_execute(distance_from_player, other.cx, other.cy) &lt; other.active_threshold)
        {
            other.change_condition = true
        }
    }
    if (change_condition)
    {
        state = 1
        sprite_index = oyster_transition
        image_index = 6
        anim_max = 24
        anim_counter = 0
        exit
    }
}
else if (state == 2)  // check if we should close the shell
{
    with (player)
    {
        if (script_execute(distance_from_player, other.cx, other.cy) &gt; other.active_threshold)
        {
            other.change_condition = true
        }
    }
    if (change_condition)
    {
        state = 3
        sprite_index = oyster_transition
        image_index = 0
        anim_max = 24
        anim_counter = 0
        exit
    }
}

if (state == 0)
{
    anim_counter = (anim_counter + 1) % anim_max
    if (anim_counter == 138)
    {
        image_index = 0
    }
    else if (anim_counter == 159)
    {
        image_index = 1
    }
}
else if (state == 1)
{
    anim_counter ++
    if (anim_counter &gt; 15)
    {
        if (anim_counter == 21)
        {
            image_index --
        }
        else if (anim_counter == anim_max)
        {
            state = 2
            image_index = 0
            sprite_index = oyster_open_idle
            anim_counter = 0
            anim_max = 42
            exit
        }
    }
    else if (anim_counter % 3 == 0)
    {
        image_index --
    }
}
else if (state == 2)
{
    anim_counter = (anim_counter + 1) % anim_max
    if (anim_counter &lt; 15)
    {
        image_index = 0
    }
    else if (anim_counter &lt; 18)
    {
        image_index = 1
    }
    else if (anim_counter &lt; 24)
    {
        image_index = 2
    }
    else if (anim_counter &lt; 27)
    {
        image_index = 3
    }
    else if (anim_counter &lt; 30)
    {
        image_index = 4
    }
    else if (anim_counter &lt; 33)
    {
        image_index = 5
    }
    else if (anim_counter &lt; 39)
    {
        image_index = 6
    }
    else if (anim_counter &lt; 42)
    {
        image_index = 7
    }
}
else if (state == 3)
{
    anim_counter ++
    if (anim_counter != 6)
    {
        if (anim_counter == anim_max)
        {
            state = 0
            image_index = 1
            sprite_index = oyster_closed_idle
            anim_counter = 0
            anim_max = 183
            exit
        }
        else if (anim_counter % 3 == 0)
        {
            image_index ++
        }
    }
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y - 64
draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
